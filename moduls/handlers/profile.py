from aiogram import Bot, Router, F
from aiogram.types import CallbackQuery, FSInputFile, InputMediaPhoto
from moduls.handlers.basic import server
from moduls.keyboards.main_keyboard import keyboard_gen, active_user_menu
from moduls.keyboards.profile_keyboard import profile_menu
from moduls.utils.static_text import MAIN_PHOTO_PATH, TEXT_START


profile_handlers = Router(name=__name__)

@profile_handlers.callback_query(F.data == "–ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å")
async def select_test(call: CallbackQuery, bot: Bot):
    days = 3
    if call.from_user.username:
        user = 'client-' + call.from_user.username + '-free'
    else:
        user = 'client-' + call.from_user.first_name.replace(' ', '_') + '-free'
    server.add_client(days, call.from_user.id, user)
    data = server.get_emails_user(call.from_user.id)
    answer = ('–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!üëΩ\n\n' + '–ö–ª–∏–∫–Ω–∏ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–ºüòè\n\n' +
              '<b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b>\n<blockquote><code>' + server.link(data[0]) + '</code></blockquote>' +'\n\n' + server.print_stat(data[0]))
    await call.message.edit_media(InputMediaPhoto(media=FSInputFile(path=MAIN_PHOTO_PATH), caption=answer),
                                  reply_markup=profile_menu())

    await call.answer()


@profile_handlers.callback_query(F.data == '–ø—Ä–æ—Ñ–∏–ª—å')
async def select_profile(call: CallbackQuery, bot: Bot):
    server.test_login()
    data = server.get_emails_user(call.from_user.id)


    if len(data) > 1:
        data_keyboard = {}
        for email in data:
            data_keyboard[email] = email
        data_keyboard['üîô –ù–∞–∑–∞–¥'] = '–Ω–∞–∑–∞–¥'
        print(data_keyboard)
        await bot.edit_message_reply_markup(chat_id=call.from_user.id, message_id=call.message.message_id, reply_markup=keyboard_gen(data_keyboard))

    if len(data) == 1:
        text = (server.print_stat(data[0]) + '\n<b>–°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b>\n<blockquote><code>' + server.link(data[0]) +
                '</code></blockquote>\n\n–ß—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–µ ‚òùÔ∏èüòé')
        await call.message.edit_media(InputMediaPhoto(media=FSInputFile(path=MAIN_PHOTO_PATH), caption=text),
                                      reply_markup=profile_menu())


    await call.answer()


@profile_handlers.callback_query(F.data == '–Ω–∞–∑–∞–¥ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è')
async def back_from_profile(call: CallbackQuery, bot: Bot):
    await call.message.edit_media(InputMediaPhoto(media=FSInputFile(path=MAIN_PHOTO_PATH), caption=TEXT_START),
                                  reply_markup=active_user_menu())
    await call.answer()


@profile_handlers.callback_query(F.data == '–ø—Ä–æ–¥–ª–∏—Ç—å')
async def renew(call: CallbackQuery, bot: Bot):
    await call.answer()

@profile_handlers.callback_query(F.data == '–ø–æ–¥–µ–ª–∏—Ç—å—Å—è')
async def share(call: CallbackQuery, bot: Bot):
    await call.answer()